import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-publications',
  templateUrl: './publications.component.html',
  styleUrls: ['./publications.component.scss']
})
export class PublicationsComponent implements OnInit {

  constructor() { }

  ngOnInit(): void {
  }

  sections = [
    {
      title: "Journal Articles",
      icon: "school",
      color: "blue",
      publications: [
        {
          title: "Narrowing the Scope of Failure Prediction Using Targeted Fault Load Injection",
          authors: "Paul Jordan Gilbert L. Peterson, Alan C. Lin, Michael J. Mendenhall & Andrew J. Sellers",
          download: "https://dx.doi.org/10.1080/17517575.2017.1390167",
          abstract: "As society becomes more dependent upon computer systems to perform increasingly critical tasks, ensuring that those systems do not fail becomes increasingly important. Many organizations depend heavily on desktop computers for day-to-day operations. Unfortunately, the software that runs on these computers is written by humans and, as such, is still subject to human error and consequent failure. A natural solution is to use statistical machine learning to predict failure. However, since failure is still a relatively rare event, obtaining labelled training data to train these models is not a trivial task. This work presents new simulated fault-inducing loads that extend the focus of traditional fault injection techniques to predict failure in the Microsoft enterprise authentication service and Apache web server. These new fault loads were successful in creating failure conditions that were identifiable using statistical learning methods, with fewer irrelevant faults being created.",
          citation: "Jordan, Paul L., Gilbert L. Peterson, Alan C. Lin, Michael J. Mendenhall, and Andrew J. Sellers. 2017. “Narrowing the scope of failure prediction using targeted fault load injection.” Enterprise Information Systems 0 (0): 1–16.",
        },
        {
          title: "Reliable Presence Detection through Passive IEEE 802.11 Management Frame Sniffing",
          authors: "Paul Jordan, and Andrew Sellers",
          download: "http://scholarcommons.usf.edu/mca/vol1/iss1/5/",
          abstract: "Abstract Modern automated control systems leverage significantly different and disparate data sets for modeling and decision-making. Yet, dynamic human presence detection and identification is not widely used in these systems despite the enriching effect such information would have. We behave in unpredictable ways and are not easily identifiable by computers. This paper outlines a method for reliably and passively detecting presence of a person and identifying that person by exploiting existing ubiquitous infrastructure: Wi-Fi networks and that persons Wi-Fi enabled smartphone without installing any additional software. We further enumerate several applications ranging from home security to energy efficiencies. We explore the security and moral implications of automated person tracking as well as suggest reasonable mitigation measures.",
          citation: 'Jordan, Paul L. and Sellers, Andrew J. (2015) "Reliable Presence Detection through Passive IEEE 802.11 Management Frame Sniffing," Military Cyber Affairs: Vol. 1: Iss. 1, Article 5.',
        }
      ]
    },
    {
      title: "Conference Papers",
      icon: "people",
      color: "orange",
      publications: [
        {
          title: "Distributed Powershell Load Generator (D-PLG): A New Tool for Dynamically Generating Network Traffic",
          authors: "Paul Jordan, Chip Van Patten, Gilbert Peterson, and Andrew Sellers",
          conference: "6th International Conference on Simulation and Modeling Methodologies, Technologies, and Applications (SIMULTECH 2016)",
          abstract: "Recently, a framework has been developed to automate the training of prediction algorithms but has only been tested on one system. In order to generalize the approach a few key functions must be performed. One of these functions is load generation. Unfortunately, a valid load generator has not been developed for a Microsoft Windows active directory environment. In this paper we introduce and detail a tool that we have developed to make the implementation of this new framework possible in a Microsoft domain, we present data generated by our tool to demonstrate its efficacy, and finish with several extensions and applications for our tool.",
          citation: "P. Jordan, C. Van Patten, G. Peterson, and A. Sellers, “Distributed powershell load generator (D-PLG): A new tool for dynamically generating network traffic,” in Proceedings of the 6th International Conference on Simulation and Modeling Methodologies, Technologies, and Applications (SIMULTECH 2016), pp. 195–202, July 2016.",
        }
      ]
    },
    {
      title: "Magazine Articles",
      icon: "menu_book",
      color: "green",
      publications: [
        {
          title: "Securing the Autonomous Revolution",
          link: "https://docs.google.com/viewer?a=v&pid=sites&srcid=bWlsY3liZXIub3JnfG1hZ2F6aW5lfGd4OjZiNjg5ZDViMDcxMzY5NzQ",
          image: "assets/img/autonomous.png",
        },
        {
          title: "A Year of Developing Military Cyber Professionals in our Nation's Hearland",
          link: "https://docs.google.com/viewer?a=v&pid=sites&srcid=bWlsY3liZXIub3JnfG1hZ2F6aW5lfGd4OjdkYjkzODE2OWExYmU1ZTU",
          image: "assets/img/mcpa-black.png",
        }
      ]
    },
    
  ]

// Building

// Securing
// https://docs.google.com/viewer?a=v&pid=sites&srcid=bWlsY3liZXIub3JnfG1hZ2F6aW5lfGd4OjZiNjg5ZDViMDcxMzY5NzQ

}
